function word rand(word seed)
let seed = (8121*seed+28411)%(134456)
return seed

function double pow(double base,word power)
let double result=1.0
for i=0;i<power;i++
{
	let result=base*result
}
return result

function doulbe sqrt(double S)
let double x = 2.232 + 0.223*S
for y=0;y<20;y++
{
	let double x= ((S/x)+x)/2
}
return x


function adress cossin(double theta)
//table of angles in radians for angles 1,1/2,1/4,.....2^(-n)
let double angles={0.78539816339745,   0.46364760900081,   0.24497866312686,   0.12435499454676,
		    0.06241880999596,   0.03123983343027,   0.01562372862048,   0.00781234106010,
		    0.00390623013197,   0.00195312251648,   0.00097656218956,   0.00048828121119,
		    0.00024414062015,   0.00012207031189,   0.00006103515617,   0.00003051757812,
		    0.00001525878906,   0.00000762939453,   0.00000381469727,   0.00000190734863,
		    0.00000095367432,   0.00000047683716,   0.00000023841858,   0.00000011920929,
		    0.00000005960464,   0.00000002980232,   0.00000001490116,   0.00000000745058}
let double sigma = 1.0
let double powerofto = 1.0
let double angle=angles[0]
let double two=2.0
//V=[1,0]
let double x=1.0
let double y=0.0
//

for i=0;i<27;i++
{
	if theta<0
	{
		//rotate clockwise
		let sigma = -1.0
	}
	else
	{

		let sigma = 1.0
	}
	let double factor = sigma*powerofto


	//do matrix times vector
	//[1,-facotor]*[x]
	//[-facotor,1]*[y]
	//
	let double xT=y*factor
	let double yT=x*factor
	let x= x - xT

	let y= y + yT

	let double t=sigma*angle
	let double theta = theta - t

	let powerofto=powerofto/two
	let angle=angles[i+1]
	
	

}
//corect values
let double K = 0.60725293500888125616944
let word values=[2]
let values[0]=x*K
let values[1]=y*K
return values

function double sin(double theta)
let double angle = CALL correctAngle{theta}
let double neg = -1.0
let double twopi = 6.283185307179586
let double pi = 3.141592653589793
let double halfpi = 1.57079632679489
let double threeHalfPi=pi+halfpi
if (angle-halfpi)<0
{
	let sin=(CALL cossin{angle})[1]
}
else if (angle-pi)<0
{
	let angle=pi-angle
	let sin=(CALL cossin{angle})[1]
}
else if (angle-threeHalfPi)<0
{
	let angle=angle-pi
	let sin=(CALL cossin{angle})[1]
	let sin=sin*neg
}
else
{
	let angle=twopi-angle
	let sin=(CALL cossin{angle})[1]
	let sin=sin*neg
}
return sin

function double cos(double theta)
let double angle = CALL correctAngle{theta}
let double neg = -1.0
let double twopi = 6.283185307179586
let double pi = 3.141592653589793
let double halfpi = 1.57079632679489
let double threeHalfPi=pi+halfpi
if (angle-halfpi)<0
{
	let cos=(CALL cossin{angle})[0]
}
else if (angle-pi)<0
{
	let angle=pi-angle
	let cos=(CALL cossin{angle})[0]
	let cos=cos*neg
}
else if (angle-threeHalfPi)<0
{
	let angle=angle-pi
	let cos=(CALL cossin{angle})[0]
	let cos=cos*neg
}
else
{
	let angle=twopi-angle
	let cos= (CALL cossin{angle})[0]
}
return cos


function double correctAngle(double angle)
//corects angle so 0<=angle<=2*Pi
let double twopi = 6.283185307179586

if angle>0.0
{
	while (angle-twopi)>0
	{
		let angle=angle-twopi
	}
}
else
{
	while (angle)<0
	{
		let angle=angle+twopi
	}
}
return angle
